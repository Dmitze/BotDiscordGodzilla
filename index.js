<<<<<<< HEAD
const { Client, GatewayIntentBits, Routes } = require('discord.js');
const fetch = (...args) => import('node-fetch').then(({ default: f }) => f(...args));
const XLSX = require('xlsx');
require('dotenv').config();

// –ó—á–∏—Ç—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ –∑ .env
const SHEET_ID = process.env.SHEET_ID;
const SHEET_NAME = '–ê—Ä–∫—É—à1';
const GOOGLE_API_KEY = process.env.GOOGLE_API_KEY;
const APP_SCRIPT_URL = process.env.APP_SCRIPT_URL;
const API_URL = `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${SHEET_NAME}?key=${GOOGLE_API_KEY}`;
const CELLS_URL = `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/C964:E964?key=${GOOGLE_API_KEY}`;
const client = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.MessageContent,
    GatewayIntentBits.GuildMessageReactions
  ]
});

// –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —Å–ª–µ—à-–∫–æ–º–∞–Ω–¥
const { REST } = require('@discordjs/rest');
const { version } = require('discord.js').Constants;
const commands = [
  {
    name: '–∑–∞–ª–∏—à–∫–∏',
    description: '–ü–æ–∫–∞–∑—É—î –∑–∞–≥–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—ñ–≤'
  },
  {
    name: '–æ–Ω–æ–≤–∏—Ç–∏',
    description: '–ü—Ä–∏–Ω—É–¥–æ–≤–æ –æ–Ω–æ–≤–ª—é—î –¥–∞–Ω—ñ'
  },
  {
    name: '–ø–æ—Ä–æ–∂–Ω—ñ',
    description: '–ü–æ–∫–∞–∑—É—î —Ç–æ–≤–∞—Ä–∏ –∑ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–æ—é –∫—ñ–ª—å–∫—ñ—Å—Ç—é'
  },
  {
    name: '–ø–æ—à—É–∫',
    description: '–ü–æ—à—É–∫ –∑–∞ –ø–æ–ª—è–º–∏ —Ç–∞–±–ª–∏—Ü—ñ',
    options: [
      {
        name: '–ø–æ–ª–µ',
        description: '–ó–∞ —è–∫–∏–º –ø–æ–ª–µ–º —à—É–∫–∞—Ç–∏',
        type: 3,
        required: true,
        choices: [
          { name: '–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è', value: '–Ω–∞–∑–≤–∞' },
          { name: '–°–µ—Ä—ñ–π–Ω–∏–π –Ω–æ–º–µ—Ä', value: '—Å–µ—Ä—ñ—è' },
          { name: '–ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç', value: '–∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç' },
          { name: '–ö—ñ–ª—å–∫—ñ—Å—Ç—å', value: '–∫—ñ–ª—å–∫—ñ—Å—Ç—å' },
          { name: '–¶—ñ–Ω–∞', value: '—Ü—ñ–Ω–∞' }
        ]
      },
      {
        name: '–∑–∞–ø–∏—Ç',
        description: '–©–æ —à—É–∫–∞—Ç–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: "—Å—Ç–æ–ª", "5")',
        type: 3,
        required: true
      }
    ]
  },
  {
    name: '—Ä–æ–∑—É–º–Ω–∏–π-–ø–æ—à—É–∫',
    description: '–ü–æ—à—É–∫ –∑–∞ –∫—ñ–ª—å–∫–æ–º–∞ –ø–æ–ª—è–º–∏',
    options: [
      { name: '–Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞', type: 3, description: '–®—É–∫–∞—Ç–∏ –∑–∞ –Ω–∞–∑–≤–æ—é —Ç–æ–≤–∞—Ä—É' },
      { name: '–∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç', type: 3, description: '–®—É–∫–∞—Ç–∏ –∑–∞ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–º' },
      { name: '—Å–µ—Ä—ñ—è', type: 3, description: '–®—É–∫–∞—Ç–∏ –∑–∞ —Å–µ—Ä—ñ–π–Ω–∏–º –Ω–æ–º–µ—Ä–æ–º' },
      { name: '—Ü—ñ–Ω–∞_–≤–∏—â–µ', type: 10, description: '–ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ —Ç–æ–≤–∞—Ä–∏ –¥–æ—Ä–æ–∂—á–µ —Ü—å–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è' },
      { name: '–∫—ñ–ª—å–∫—ñ—Å—Ç—å_–≤–∏—â–µ', type: 10, description: '–ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ —Ç–æ–≤–∞—Ä–∏ –∑ –∫—ñ–ª—å–∫—ñ—Å—Ç—é –±—ñ–ª—å—à–µ' }
    ]
  },
  {
    name: '–ø–æ—à—É–∫-–µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ',
    description: '–ï–∫—Å–ø–æ—Ä—Ç—É—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É –≤ Excel (.xlsx)',
    options: [
      {
        name: '–ø–æ–ª–µ',
        description: '–ó–∞ —è–∫–∏–º –ø–æ–ª–µ–º —à—É–∫–∞—Ç–∏',
        type: 3,
        required: true,
        choices: [
          { name: '–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è', value: '–Ω–∞–∑–≤–∞' },
          { name: '–°–µ—Ä—ñ–π–Ω–∏–π –Ω–æ–º–µ—Ä', value: '—Å–µ—Ä—ñ—è' },
          { name: '–ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç', value: '–∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç' },
          { name: '–ö—ñ–ª—å–∫—ñ—Å—Ç—å', value: '–∫—ñ–ª—å–∫—ñ—Å—Ç—å' },
          { name: '–¶—ñ–Ω–∞', value: '—Ü—ñ–Ω–∞' }
        ]
      },
      {
        name: '–∑–∞–ø–∏—Ç',
        description: '–©–æ —à—É–∫–∞—Ç–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: "—Å—Ç–æ–ª", "5")',
        type: 3,
        required: true
      }
    ]
  },
  {
    name: '–µ–∫—Å–ø–æ—Ä—Ç',
    description: '–ï–∫—Å–ø–æ—Ä—Ç—É—î –≤—Å—é —Ç–∞–±–ª–∏—Ü—é –≤ Excel (.xlsx)'
  },
  {
    name: 'help',
    description: '–ü–æ–∫–∞–∑—É—î —Å–ø–∏—Å–æ–∫ —É—Å—ñ—Ö –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–æ–º–∞–Ω–¥'
  }
];
const rest = new REST({ version: '10' }).setToken(process.env.BOT_TOKEN);

// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
// üß† –§—É–Ω–∫—Ü—ñ—è: –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–∏ –∑–º—ñ–Ω—ñ –≤ —Ç–∞–±–ª–∏—Ü—ñ
// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
let previousData = null;
async function checkForChanges(botClient) {
  try {
    const res = await fetch(API_URL);
    const data = await res.json();
    const currentRows = data.values;
    if (!previousData) {
      previousData = currentRows;
      return;
    }
    const changedCells = [];
    for (let i = 0; i < Math.min(currentRows.length, previousData.length); i++) {
      const oldRow = previousData[i];
      const newRow = currentRows[i];
      if (!oldRow || !newRow) continue;
      for (let j = 0; j < Math.min(oldRow.length, newRow.length); j++) {
        if (oldRow[j] !== newRow[j]) {
          changedCells.push({
            row: i + 1,
            column: j + 1,
            from: oldRow[j],
            to: newRow[j]
          });
        }
      }
    }
    if (changedCells.length > 0) {
      const channel = botClient.channels.cache.find(ch => ch.name === '—Å–∫–ª–∞–¥' && ch.type === 0);
      if (!channel) return;
      let message = `üîî –í–∏—è–≤–ª–µ–Ω–æ –∑–º—ñ–Ω–∏ –≤ —Ç–∞–±–ª–∏—Ü—ñ:
`;
      changedCells.forEach(change => {
        const colLetter = String.fromCharCode(64 + change.column); // A=1 ‚Üí @CharCode(65)
        message += `–ö–ª—ñ—Ç–∏–Ω–∫–∞ ${colLetter}${change.row}:
  –ë—É–ª–æ: \`${change.from}\`
  –°—Ç–∞–ª–æ: \`${change.to}\`
`;
      });
      const embed = new EmbedBuilder()
        .setTitle('üîî –í–∏—è–≤–ª–µ–Ω–æ –∑–º—ñ–Ω–∏ –≤ —Ç–∞–±–ª–∏—Ü—ñ')
        .setDescription(message)
        .setColor(3447003)
        .setTimestamp();
      await channel.send({ embeds: [embed] });
    }
    previousData = currentRows;
  } catch (err) {
    console.error('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∑–º—ñ–Ω–∏:', err);
  }
}

// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
// üöÄ –õ–æ–≥—ñ–Ω —ñ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∫–æ–º–∞–Ω–¥
// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
client.once('ready', async () => {
  console.log(`–ë–æ—Ç ${client.user.tag} –æ–Ω–ª–∞–π–Ω!`);
  try {
    await rest.put(Routes.applicationCommands(client.user.id), { body: commands });
    console.log('Slash-–∫–æ–º–∞–Ω–¥–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ!');
  } catch (error) {
    console.error('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏ –∫–æ–º–∞–Ω–¥–∏:', error);
  }
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–∂–Ω—ñ 5 —Ö–≤–∏–ª–∏–Ω
  setInterval(() => checkForChanges(client), 300000); // 5 —Ö–≤–∏–ª–∏–Ω
});

// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
// üìä –û–±—Ä–æ–±–∫–∞ —Å–ª–µ—à-–∫–æ–º–∞–Ω–¥
// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
client.on('interactionCreate', async interaction => {
  if (!interaction.isChatInputCommand()) return;
  try {
    switch (interaction.commandName) {
      case '–∑–∞–ª–∏—à–∫–∏':
        const res = await fetch(CELLS_URL);
        const data = await res.json();
        const cellValues = data.values?.flat() || [];
        const totalValue = Number(cellValues[0]) || 0;
        const totalQuantity = Number(cellValues[1]) || 0;
        const avgPrice = Number(cellValues[2]) || 0;
        const embed = new EmbedBuilder()
          .setTitle('üìä –ó–∞–≥–∞–ª—å–Ω—ñ –∑–∞–ª–∏—à–∫–∏')
          .addFields(
            { name: '–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞', value: `${totalValue.toFixed(2)} –≥—Ä–Ω`, inline: true },
            { name: '–ö—ñ–ª—å–∫—ñ—Å—Ç—å', value: `${totalQuantity} —à—Ç.`, inline: true },
            { name: '–°–µ—Ä–µ–¥–Ω—è —Ü—ñ–Ω–∞', value: `${avgPrice.toFixed(2)} –≥—Ä–Ω`, inline: true }
          )
          .setColor(5763719)
          .setFooter({ text: '–§—ñ–Ω–∞–Ω—Å–æ–≤–∞ —Å–ª—É–∂–±–∞' })
          .setTimestamp();
        await interaction.reply({ embeds: [embed], ephemeral: false });
        break;
      case '–æ–Ω–æ–≤–∏—Ç–∏':
        const resUpdate = await fetch(API_URL);
        const dataUpdate = await resUpdate.json();
        const rowsUpdate = dataUpdate.values?.slice(1) || [];
        const headersUpdate = dataUpdate.values?.[0] || [];
        if (rowsUpdate.length === 0) {
          await interaction.reply({ content: '‚ö†Ô∏è –¢–∞–±–ª–∏—Ü—è –ø–æ—Ä–æ–∂–Ω—è.', ephemeral: false });
          return;
        }
        let output = '| –ù–∞–∑–≤–∞       | –ö—ñ–ª—å–∫—ñ—Å—Ç—å | –¶—ñ–Ω–∞ |
|--------------|------------|--------|
';
        for (let i = Math.max(0, rowsUpdate.length - 10); i < rowsUpdate.length; i++) {
          const row = rowsUpdate[i];
          const name = row[6] || '‚Äî';
          const quantity = row[3] || '‚Äî';
          const price = row[4] || '‚Äî';
          output += `| ${name.padEnd(13).slice(0, 13)} | ${quantity.toString().padStart(9)} | ${price.toString().padStart(6)} |
`;
        }
        const embedUpdate = new EmbedBuilder()
          .setTitle('üîÑ –û—Å—Ç–∞–Ω–Ω—ñ –∑–∞–ø–∏—Å–∏')
          .setDescription(`\`\`\`md
${output}\`\`\``)
          .setColor(3066993)
          .setFooter({ text: '–í–∏–≤–µ–¥–µ–Ω–æ –æ—Å—Ç–∞–Ω–Ω—ñ 10 –∑–∞–ø–∏—Å—ñ–≤' });
        await interaction.reply({ embeds: [embedUpdate], ephemeral: false });
        break;
      case '–ø–æ—Ä–æ–∂–Ω—ñ':
        const resLowStock = await fetch(API_URL);
        const dataLowStock = await resLowStock.json();
        const rowsLowStock = dataLowStock.values?.slice(1) || [];
        const headersLowStock = dataLowStock.values?.[0] || [];
        const lowStock = rowsLowStock.filter(row => Number(row[3] || 0) <= 5);
        if (lowStock.length === 0) {
          await interaction.reply({ content: 'üü¢ –£—Å—ñ —Ç–æ–≤–∞—Ä–∏ –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ.', ephemeral: false });
          return;
        }
        output = '';
        for (let i = 0; i < Math.min(10, lowStock.length); i++) {
          const row = lowStock[i];
          const name = row[6] || '‚Äî';
          const quantity = row[3] || '‚Äî';
          output += `
‚Ä¢ ${name} | –ö—ñ–ª—å–∫—ñ—Å—Ç—å: ${quantity}`;
        }
        const embedLowStock = new EmbedBuilder()
          .setTitle('‚ö†Ô∏è –ú–∞–ª–æ —Ç–æ–≤–∞—Ä—É')
          .setDescription(output)
          .setColor(15158332);
        const rowButtons = new ActionRowBuilder()
          .addComponents(
            new ButtonBuilder()
              .setCustomId('download_excel_low_stock')
              .setLabel('–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ Excel')
              .setStyle(ButtonStyle.Success)
          );
        await interaction.reply({ embeds: [embedLowStock], components: [rowButtons], ephemeral: false });
        break;
      case '–ø–æ—à—É–∫':
      case '–ø–æ—à—É–∫-–µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ':
        const field = interaction.options.getString('–ø–æ–ª–µ');
        const query = interaction.options.getString('–∑–∞–ø–∏—Ç').toLowerCase();
        const resSearch = await fetch(API_URL);
        const dataSearch = await resSearch.json();
        const rowsSearch = dataSearch.values?.slice(1) || [];
        const headersSearch = dataSearch.values?.[0] || [];
        let colIndex = -1;
        switch (field) {
          case '–Ω–∞–∑–≤–∞': colIndex = 6; break;
          case '—Å–µ—Ä—ñ—è': colIndex = 7; break;
          case '–∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç': colIndex = 5; break;
          case '–∫—ñ–ª—å–∫—ñ—Å—Ç—å': colIndex = 3; break;
          case '—Ü—ñ–Ω–∞': colIndex = 4; break;
        }
        if (colIndex === -1) {
          await interaction.reply({ content: '‚ùå –ù–µ–≤—ñ–¥–æ–º–µ –ø–æ–ª–µ –¥–ª—è –ø–æ—à—É–∫—É.', ephemeral: false });
          return;
        }
        const isNumericField = ['–∫—ñ–ª—å–∫—ñ—Å—Ç—å', '—Ü—ñ–Ω–∞'].includes(field);
        const results = rowsSearch.filter(row => {
          const value = row[colIndex]?.toString().toLowerCase() || '';
          return isNumericField ? Number(value) >= Number(query) : value.includes(query);
        });
        if (results.length === 0) {
          await interaction.reply({ content: 'üîç –ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.', ephemeral: false });
          return;
        }
        output = '| –ù–∞–∑–≤–∞       | –ö—ñ–ª—å–∫—ñ—Å—Ç—å | –¶—ñ–Ω–∞ |
|--------------|------------|--------|
';
        for (let i = 0; i < Math.min(10, results.length); i++) {
          const row = results[i];
          const name = row[6] || '‚Äî';
          const quantity = row[3] || '‚Äî';
          const price = row[4] || '‚Äî';
          output += `| ${name.padEnd(13).slice(0, 13)} | ${quantity} | ${price} |
`;
        }
        const embedSearch = new EmbedBuilder()
          .setTitle(`üîç –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É (${results.length})`)
          .setDescription(`\`\`\`md
${output}\`\`\``)
          .setColor(3066993);
        if (interaction.commandName === '–ø–æ—à—É–∫') {
          const rowButtons = new ActionRowBuilder()
            .addComponents(
              new ButtonBuilder()
                .setCustomId('download_excel_search')
                .setLabel('–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ Excel')
                .setStyle(ButtonStyle.Primary)
            );
          await interaction.reply({ embeds: [embedSearch], components: [rowButtons], ephemeral: false });
        } else if (interaction.commandName === '–ø–æ—à—É–∫-–µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ') {
          const exportData = [headersSearch, ...results]; // –¥–æ–¥–∞—î–º–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏ + —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
          const worksheet = XLSX.utils.aoa_to_sheet(exportData);
          const workbook = XLSX.utils.book_new();
          XLSX.utils.book_append_sheet(workbook, worksheet, '–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É');
          const filePath = './search_results.xlsx';
          XLSX.writeFile(workbook, filePath);
          await interaction.reply({
            content: 'üìä –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ —Ñ–∞–π–ª...',
            files: [filePath],
            ephemeral: false
          });
        }
        break;
      case '—Ä–æ–∑—É–º–Ω–∏–π-–ø–æ—à—É–∫':
        const resSmartSearch = await fetch(API_URL);
        const dataSmartSearch = await resSmartSearch.json();
        const rowsSmartSearch = dataSmartSearch.values?.slice(1) || [];
        const headersSmartSearch = dataSmartSearch.values?.[0] || [];
        const filters = {
          name: interaction.options.getString('–Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞'),
          client: interaction.options.getString('–∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç'),
          series: interaction.options.getString('—Å–µ—Ä—ñ—è'),
          priceMin: interaction.options.getNumber('—Ü—ñ–Ω–∞_–≤–∏—â–µ'),
          quantityMin: interaction.options.getNumber('–∫—ñ–ª—å–∫—ñ—Å—Ç—å_–≤–∏—â–µ')
        };
        const smartResults = rowsSmartSearch.filter(row => {
          const nameMatch = !filters.name || row[6]?.toLowerCase().includes(filters.name.toLowerCase());
          const clientMatch = !filters.client || row[5]?.toLowerCase().includes(filters.client.toLowerCase());
          const seriesMatch = !filters.series || row[7]?.toLowerCase().includes(filters.series.toLowerCase());
          const priceMatch = !filters.priceMin || Number(row[4] || 0) >= filters.priceMin;
          const quantityMatch = !filters.quantityMin || Number(row[3] || 0) >= filters.quantityMin;
          return nameMatch && clientMatch && seriesMatch && priceMatch && quantityMatch;
        });
        if (smartResults.length === 0) {
          await interaction.reply({ content: 'üîç –ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.', ephemeral: false });
          return;
        }
        output = '| –ù–∞–∑–≤–∞       | –ö—ñ–ª—å–∫—ñ—Å—Ç—å | –¶—ñ–Ω–∞ |
|--------------|------------|--------|
';
        for (let i = 0; i < Math.min(10, smartResults.length); i++) {
          const row = smartResults[i];
          const name = row[6] || '‚Äî';
          const quantity = row[3] || '‚Äî';
          const price = row[4] || '‚Äî';
          output += `| ${name.padEnd(13).slice(0, 13)} | ${quantity} | ${price} |
`;
        }
        const embedSmartSearch = new EmbedBuilder()
          .setTitle(`üîç –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ —Ä–æ–∑—É–º–Ω–æ–≥–æ –ø–æ—à—É–∫—É (${smartResults.length})`)
          .setDescription(`\`\`\`md
${output}\`\`\``)
          .setColor(3066993);
        const rowSmartExport = new ActionRowBuilder()
          .addComponents(
            new ButtonBuilder()
              .setCustomId('download_excel_smart')
              .setLabel('–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ Excel')
              .setStyle(ButtonStyle.Success)
          );
        await interaction.reply({ embeds: [embedSmartSearch], components: [rowSmartExport], ephemeral: false });
        break;
      case '–µ–∫—Å–ø–æ—Ä—Ç':
        const resExport = await fetch(API_URL);
        const dataExport = await resExport.json();
        const exportRows = dataExport.values || [];
        const worksheet = XLSX.utils.aoa_to_sheet(exportRows);
        const workbook = XLSX.utils.book_new();
        XLSX.utils.book_append_sheet(workbook, worksheet, '–î–∞–Ω—ñ');
        const filePathExport = './table.xlsx';
        XLSX.writeFile(workbook, filePathExport);
        await interaction.reply({
          content: 'üìé –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –≤—Å—é —Ç–∞–±–ª–∏—Ü—é...',
          files: [filePathExport],
          ephemeral: false
        });
        break;
      case 'help':
        const helpEmbed = new EmbedBuilder()
          .setTitle('üìö –î–æ–ø–æ–º–æ–≥–∞')
          .setDescription('–û—Å—å —É—Å—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:')
          .addFields([
            { name: '/–∑–∞–ª–∏—à–∫–∏', value: '–ü–æ–∫–∞–∑—É—î –∑–∞–≥–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —ñ —Å—É–º—É —Ç–æ–≤–∞—Ä—ñ–≤', inline: false },
            { name: '/–æ–Ω–æ–≤–∏—Ç–∏', value: '–ü–æ–∫–∞–∑—É—î –æ—Å—Ç–∞–Ω–Ω—ñ 10 –∑–∞–ø–∏—Å—ñ–≤', inline: false },
            { name: '/–ø–æ—Ä–æ–∂–Ω—ñ', value: '–ü–æ–∫–∞–∑—É—î —Ç–æ–≤–∞—Ä–∏, –¥–µ –∫—ñ–ª—å–∫—ñ—Å—Ç—å ‚â§ 5', inline: false },
            { name: '/–ø–æ—à—É–∫ [–ø–æ–ª–µ] [–∑–∞–ø–∏—Ç]', value: '–ü–æ—à—É–∫ –∑–∞ –ø–æ–ª—è–º–∏: –Ω–∞–∑–≤–∞, —Å–µ—Ä—ñ—è, –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç', inline: false },
            { name: '/—Ä–æ–∑—É–º–Ω–∏–π-–ø–æ—à—É–∫', value: '–ü–æ—à—É–∫ –∑–∞ –∫—ñ–ª—å–∫–æ–º–∞ –ø–æ–ª—è–º–∏', inline: false },
            { name: '/–ø–æ—à—É–∫-–µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ [–ø–æ–ª–µ] [–∑–∞–ø–∏—Ç]', value: '–ï–∫—Å–ø–æ—Ä—Ç—É—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É –≤ Excel', inline: false },
            { name: '!–¥–æ–¥–∞—Ç–∏ [–Ω–∞–∑–≤–∞] [–∫—ñ–ª—å–∫—ñ—Å—Ç—å]', value: '–î–æ–¥–∞—î –Ω–æ–≤–∏–π –∑–∞–ø–∏—Å —á–µ—Ä–µ–∑ Google Apps Script', inline: false },
            { name: '!–µ–∫—Å–ø–æ—Ä—Ç', value: '–ï–∫—Å–ø–æ—Ä—Ç—É—î—Ç—å—Å—è –≤—Å—è —Ç–∞–±–ª–∏—Ü—è', inline: false }
          ])
          .setColor(5763719)
          .setTimestamp();
        const rowHelp = new ActionRowBuilder()
          .addComponents(
            new ButtonBuilder()
              .setLabel('–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è')
              .setURL('https://your-docs-link-here')
              .setStyle(ButtonStyle.Link)
          );
        await interaction.reply({ embeds: [helpEmbed], components: [rowHelp], ephemeral: false });
        break;
    }
  } catch (err) {
    console.error(err);
    await interaction.reply({ content: '‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –¥–∞–Ω–∏—Ö.', ephemeral: false });
  }
});

// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
// üí¨ –¢–µ–∫—Å—Ç–æ–≤—ñ –∫–æ–º–∞–Ω–¥–∏
// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
client.on('messageCreate', async msg => {
  if (msg.author.bot) return;
  const args = msg.content.split(' ');
  // !–¥–æ–¥–∞—Ç–∏ [–Ω–∞–∑–≤–∞] [–∫—ñ–ª—å–∫—ñ—Å—Ç—å]
  if (args[0] === '!–¥–æ–¥–∞—Ç–∏') {
    if (args.length < 3) {
      msg.reply('–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: `!–¥–æ–¥–∞—Ç–∏ [–Ω–∞–∑–≤–∞] [–∫—ñ–ª—å–∫—ñ—Å—Ç—å]`');
      return;
    }
    const name = args.slice(1, -1).join(' ');
    const quantity = parseInt(args[args.length - 1]);
    if (!name || isNaN(quantity)) {
      msg.reply('‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç. –ü—Ä–∏–∫–ª–∞–¥: `!–¥–æ–¥–∞—Ç–∏ –Ω–æ—É—Ç–±—É–∫ 5`');
      return;
    }
    try {
      const response = await fetch(APP_SCRIPT_URL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ name, quantity })
      });
      const text = await response.text();
      if (text.trim() === 'OK') {
        msg.reply(`‚úÖ –î–æ–¥–∞–Ω–æ: "${name}" √ó ${quantity}`);
      } else {
        msg.reply('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –¥–æ–¥–∞—Ç–∏ –∑–∞–ø–∏—Å.');
      }
    } catch (err) {
      console.error(err);
      msg.reply('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –∑–∞–ø–∏—Ç –¥–æ Google Apps Script.');
    }
  }
  // !–µ–∫—Å–ø–æ—Ä—Ç
  if (msg.content === '!–µ–∫—Å–ø–æ—Ä—Ç') {
    try {
      const res = await fetch(API_URL);
      const data = await res.json();
      const exportRows = data.values || [];
      const worksheet = XLSX.utils.aoa_to_sheet(exportRows);
      const workbook = XLSX.utils.book_new();
      XLSX.utils.book_append_sheet(workbook, worksheet, '–î–∞–Ω—ñ');
      const filePath = './table.xlsx';
      XLSX.writeFile(workbook, filePath);
      await msg.reply({
        content: 'üìä –î–∞–Ω—ñ –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ:',
        files: [filePath]
      });
    } catch (err) {
      console.error(err);
      msg.reply('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ —Ñ–∞–π–ª.');
    }
  }
});

// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
// ‚öôÔ∏è –õ–æ–≥—ñ–Ω –±–æ—Ç–∞
// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
client.login(process.env.BOT_TOKEN);
=======
const { Client, GatewayIntentBits, Routes } = require('discord.js');
const fetch = (...args) => import('node-fetch').then(({ default: f }) => f(...args));
const XLSX = require('xlsx');
require('dotenv').config();

// –ó—á–∏—Ç—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ –∑ .env
const SHEET_ID = process.env.SHEET_ID;
const SHEET_NAME = '–ê—Ä–∫—É—à1';
const GOOGLE_API_KEY = process.env.GOOGLE_API_KEY;
const APP_SCRIPT_URL = process.env.APP_SCRIPT_URL;
if (!SHEET_ID || !GOOGLE_API_KEY || !APP_SCRIPT_URL) {
  console.error("‚ùó –û–¥–∏–Ω –∑ –æ–±–æ–≤'—è–∑–∫–æ–≤–∏—Ö ENV-–ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π");
  process.exit(1);
}
const API_URL = `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${SHEET_NAME}?key=${GOOGLE_API_KEY}`;
const CELLS_URL = `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/C964:E964?key=${GOOGLE_API_KEY}`;
const client = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.MessageContent,
    GatewayIntentBits.GuildMessageReactions
  ]
});

// –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —Å–ª–µ—à-–∫–æ–º–∞–Ω–¥
const { REST } = require('@discordjs/rest');
const { version } = require('discord.js').Constants;
const commands = [
  {
    name: '–∑–∞–ª–∏—à–∫–∏',
    description: '–ü–æ–∫–∞–∑—É—î –∑–∞–≥–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—ñ–≤'
  },
  {
    name: '–æ–Ω–æ–≤–∏—Ç–∏',
    description: '–ü—Ä–∏–Ω—É–¥–æ–≤–æ –æ–Ω–æ–≤–ª—é—î –¥–∞–Ω—ñ'
  },
  {
    name: '–ø–æ—Ä–æ–∂–Ω—ñ',
    description: '–ü–æ–∫–∞–∑—É—î —Ç–æ–≤–∞—Ä–∏ –∑ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–æ—é –∫—ñ–ª—å–∫—ñ—Å—Ç—é'
  },
  {
    name: '–ø–æ—à—É–∫',
    description: '–ü–æ—à—É–∫ –∑–∞ –ø–æ–ª—è–º–∏ —Ç–∞–±–ª–∏—Ü—ñ',
    options: [
      {
        name: '–ø–æ–ª–µ',
        description: '–ó–∞ —è–∫–∏–º –ø–æ–ª–µ–º —à—É–∫–∞—Ç–∏',
        type: 3,
        required: true,
        choices: [
          { name: '–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è', value: '–Ω–∞–∑–≤–∞' },
          { name: '–°–µ—Ä—ñ–π–Ω–∏–π –Ω–æ–º–µ—Ä', value: '—Å–µ—Ä—ñ—è' },
          { name: '–ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç', value: '–∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç' },
          { name: '–ö—ñ–ª—å–∫—ñ—Å—Ç—å', value: '–∫—ñ–ª—å–∫—ñ—Å—Ç—å' },
          { name: '–¶—ñ–Ω–∞', value: '—Ü—ñ–Ω–∞' }
        ]
      },
      {
        name: '–∑–∞–ø–∏—Ç',
        description: '–©–æ —à—É–∫–∞—Ç–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: "—Å—Ç–æ–ª", "5")',
        type: 3,
        required: true
      }
    ]
  },
  {
    name: '—Ä–æ–∑—É–º–Ω–∏–π-–ø–æ—à—É–∫',
    description: '–ü–æ—à—É–∫ –∑–∞ –∫—ñ–ª—å–∫–æ–º–∞ –ø–æ–ª—è–º–∏',
    options: [
      { name: '–Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞', type: 3, description: '–®—É–∫–∞—Ç–∏ –∑–∞ –Ω–∞–∑–≤–æ—é —Ç–æ–≤–∞—Ä—É' },
      { name: '–∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç', type: 3, description: '–®—É–∫–∞—Ç–∏ –∑–∞ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–º' },
      { name: '—Å–µ—Ä—ñ—è', type: 3, description: '–®—É–∫–∞—Ç–∏ –∑–∞ —Å–µ—Ä—ñ–π–Ω–∏–º –Ω–æ–º–µ—Ä–æ–º' },
      { name: '—Ü—ñ–Ω–∞_–≤–∏—â–µ', type: 10, description: '–ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ —Ç–æ–≤–∞—Ä–∏ –¥–æ—Ä–æ–∂—á–µ —Ü—å–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è' },
      { name: '–∫—ñ–ª—å–∫—ñ—Å—Ç—å_–≤–∏—â–µ', type: 10, description: '–ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ —Ç–æ–≤–∞—Ä–∏ –∑ –∫—ñ–ª—å–∫—ñ—Å—Ç—é –±—ñ–ª—å—à–µ' }
    ]
  },
  {
    name: '–ø–æ—à—É–∫-–µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ',
    description: '–ï–∫—Å–ø–æ—Ä—Ç—É—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É –≤ Excel (.xlsx)',
    options: [
      {
        name: '–ø–æ–ª–µ',
        description: '–ó–∞ —è–∫–∏–º –ø–æ–ª–µ–º —à—É–∫–∞—Ç–∏',
        type: 3,
        required: true,
        choices: [
          { name: '–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è', value: '–Ω–∞–∑–≤–∞' },
          { name: '–°–µ—Ä—ñ–π–Ω–∏–π –Ω–æ–º–µ—Ä', value: '—Å–µ—Ä—ñ—è' },
          { name: '–ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç', value: '–∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç' },
          { name: '–ö—ñ–ª—å–∫—ñ—Å—Ç—å', value: '–∫—ñ–ª—å–∫—ñ—Å—Ç—å' },
          { name: '–¶—ñ–Ω–∞', value: '—Ü—ñ–Ω–∞' }
        ]
      },
      {
        name: '–∑–∞–ø–∏—Ç',
        description: '–©–æ —à—É–∫–∞—Ç–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: "—Å—Ç–æ–ª", "5")',
        type: 3,
        required: true
      }
    ]
  },
  {
    name: '–µ–∫—Å–ø–æ—Ä—Ç',
    description: '–ï–∫—Å–ø–æ—Ä—Ç—É—î –≤—Å—é —Ç–∞–±–ª–∏—Ü—é –≤ Excel (.xlsx)'
  },
  {
    name: 'help',
    description: '–ü–æ–∫–∞–∑—É—î —Å–ø–∏—Å–æ–∫ —É—Å—ñ—Ö –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–æ–º–∞–Ω–¥'
  }
];
const rest = new REST({ version: '10' }).setToken(process.env.BOT_TOKEN);

// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
// üß† –§—É–Ω–∫—Ü—ñ—è: –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–∏ –∑–º—ñ–Ω—ñ –≤ —Ç–∞–±–ª–∏—Ü—ñ
// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
let previousData = null;
async function checkForChanges(botClient) {
  try {
    const res = await fetch(API_URL);
    if (!SHEET_ID || !GOOGLE_API_KEY) {
      return interaction.reply({ content: '‚ùå –ù–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–ª—é—á—ñ API –≤ .env', ephemeral: true });
    }
    const data = await res.json();
    const currentRows = data.values;
    if (!previousData) {
      previousData = currentRows;
      return;
    }
    const changedCells = [];
    for (let i = 0; i < Math.min(currentRows.length, previousData.length); i++) {
      const oldRow = previousData[i];
      const newRow = currentRows[i];
      if (!oldRow || !newRow) continue;
      for (let j = 0; j < Math.min(oldRow.length, newRow.length); j++) {
        if (oldRow[j] !== newRow[j]) {
          changedCells.push({
            row: i + 1,
            column: j + 1,
            from: oldRow[j],
            to: newRow[j]
          });
        }
      }
    }
    if (changedCells.length > 0) {
      const channel = botClient.channels.cache.find(ch => ch.name === '—Å–∫–ª–∞–¥' && ch.type === 0);
      if (!channel) return;
      let message = `üîî –í–∏—è–≤–ª–µ–Ω–æ –∑–º—ñ–Ω–∏ –≤ —Ç–∞–±–ª–∏—Ü—ñ:
`;
      changedCells.forEach(change => {
        const colLetter = String.fromCharCode(64 + change.column); // A=1 ‚Üí @CharCode(65)
        message += `–ö–ª—ñ—Ç–∏–Ω–∫–∞ ${colLetter}${change.row}:
  –ë—É–ª–æ: \`${change.from}\`
  –°—Ç–∞–ª–æ: \`${change.to}\`
`;
      });
      const embed = new EmbedBuilder()
        .setTitle('üîî –í–∏—è–≤–ª–µ–Ω–æ –∑–º—ñ–Ω–∏ –≤ —Ç–∞–±–ª–∏—Ü—ñ')
        .setDescription(message)
        .setColor(3447003)
        .setTimestamp();
      await channel.send({ embeds: [embed] });
    }
    previousData = currentRows;
  } catch (err) {
    console.error('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∑–º—ñ–Ω–∏:', err);
  }
}

// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
// üöÄ –õ–æ–≥—ñ–Ω —ñ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∫–æ–º–∞–Ω–¥
// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
let retryCount = 0;
async function safeCheck() {
  try {
    await checkForChanges(client);
    retryCount = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
  } catch (err) {
    console.error(`‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ –∑–º—ñ–Ω: ${err.message}`);
    if (retryCount < 3) {
      retryCount++;
      setTimeout(safeCheck, 10000); // –ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ –∫–æ–∂–Ω—ñ 5 —Ö–≤
setInterval(safeCheck, 300000);

// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
// üìä –û–±—Ä–æ–±–∫–∞ —Å–ª–µ—à-–∫–æ–º–∞–Ω–¥
// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
client.on('interactionCreate', async interaction => {
  if (!interaction.isChatInputCommand()) return;
  try {
    switch (interaction.commandName) {
      case '–∑–∞–ª–∏—à–∫–∏':
        if (!res.ok) {
          throw new Error(`HTTP-–ø–æ–º–∏–ª–∫–∞: ${res.status}`);
        }
        const res = await fetch(CELLS_URL);
        if (!SHEET_ID || !GOOGLE_API_KEY) {
          return interaction.reply({ content: '‚ùå –ù–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–ª—é—á—ñ API –≤ .env', ephemeral: true });
        }
        const data = await res.json();
        const cellValues = data.values?.flat() || [];
const totalValue = Number(cellValues[0]) || 0;
const totalQuantity = Number(cellValues[1]) || 0;
const avgPrice = Number(cellValues[2]) || 0;
        const embed = new EmbedBuilder()
          .setTitle('üìä –ó–∞–≥–∞–ª—å–Ω—ñ –∑–∞–ª–∏—à–∫–∏')
          .addFields(
            { name: '–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞', value: `${totalValue.toFixed(2)} –≥—Ä–Ω`, inline: true },
            { name: '–ö—ñ–ª—å–∫—ñ—Å—Ç—å', value: `${totalQuantity} —à—Ç.`, inline: true },
            { name: '–°–µ—Ä–µ–¥–Ω—è —Ü—ñ–Ω–∞', value: `${avgPrice.toFixed(2)} –≥—Ä–Ω`, inline: true }
          )
          .setColor(5763719)
          .setFooter({ text: '–§—ñ–Ω–∞–Ω—Å–æ–≤–∞ —Å–ª—É–∂–±–∞' })
          .setTimestamp();
        await interaction.reply({ embeds: [embed], ephemeral: false});
        break;
      case '–æ–Ω–æ–≤–∏—Ç–∏':
        const resUpdate = await fetch(API_URL);
        if (!SHEET_ID || !GOOGLE_API_KEY) {
          return interaction.reply({ content: '‚ùå –ù–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–ª—é—á—ñ API –≤ .env', ephemeral: true });
        }
        const dataUpdate = await resUpdate.json();
        const rowsUpdate = dataUpdate.values?.slice(1) || [];
        const headersUpdate = dataUpdate.values?.[0] || [];
        if (rowsUpdate.length === 0) {
          await interaction.reply({ content: '‚ö†Ô∏è –¢–∞–±–ª–∏—Ü—è –ø–æ—Ä–æ–∂–Ω—è.', ephemeral: false });
          return;
        }
        let output = '| –ù–∞–∑–≤–∞       | –ö—ñ–ª—å–∫—ñ—Å—Ç—å | –¶—ñ–Ω–∞ |\n';
        output += '|--------------|------------|--------|\n';
        for (let i = 0; i < Math.min(10, results.length); i++) {
          const row = results[i];
          const name = row[6] || '‚Äî';
          const quantity = row[3] || '‚Äî';
          const price = row[4] || '‚Äî';
          output += `| ${name.padEnd(13).slice(0, 13)} | ${quantity} | ${price} |\n`;
        }
        const embedUpdate = new EmbedBuilder()
          .setTitle('üîÑ –û—Å—Ç–∞–Ω–Ω—ñ –∑–∞–ø–∏—Å–∏')
          .setDescription(`\`\`\`md
${output}\`\`\``)
          .setColor(3066993)
          .setFooter({ text: '–í–∏–≤–µ–¥–µ–Ω–æ –æ—Å—Ç–∞–Ω–Ω—ñ 10 –∑–∞–ø–∏—Å—ñ–≤' });
        await interaction.reply({ embeds: [embedUpdate], ephemeral: false });
        break;
      case '–ø–æ—Ä–æ–∂–Ω—ñ':
        const resLowStock = await fetch(API_URL);
        if (!SHEET_ID || !GOOGLE_API_KEY) {
          return interaction.reply({ content: '‚ùå –ù–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–ª—é—á—ñ API –≤ .env', ephemeral: true });
        }
        const dataLowStock = await resLowStock.json();
        const rowsLowStock = dataLowStock.values?.slice(1) || [];
        const headersLowStock = dataLowStock.values?.[0] || [];
        const lowStock = rowsLowStock.filter(row => Number(row[3] || 0) <= 5);
        if (lowStock.length === 0) {
          await interaction.reply({ content: 'üü¢ –£—Å—ñ —Ç–æ–≤–∞—Ä–∏ –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ.', ephemeral: false });
          return;
        }
        output = '';
        for (let i = 0; i < Math.min(10, lowStock.length); i++) {
          const row = lowStock[i];
          const name = row[6] || '‚Äî';
          const quantity = row[3] || '‚Äî';
          output += `
‚Ä¢ ${name} | –ö—ñ–ª—å–∫—ñ—Å—Ç—å: ${quantity}`;
        }
        const embedLowStock = new EmbedBuilder()
          .setTitle('‚ö†Ô∏è –ú–∞–ª–æ —Ç–æ–≤–∞—Ä—É')
          .setDescription(output)
          .setColor(15158332);
        const rowButtons = new ActionRowBuilder()
          .addComponents(
            new ButtonBuilder()
              .setCustomId('download_excel_low_stock')
              .setLabel('–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ Excel')
              .setStyle(ButtonStyle.Success)
          );
        await interaction.reply({ embeds: [embedLowStock], components: [rowButtons], ephemeral: false });
        break;
      case '–ø–æ—à—É–∫':
      case '–ø–æ—à—É–∫-–µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ':
        const field = interaction.options.getString('–ø–æ–ª–µ');
        const query = interaction.options.getString('–∑–∞–ø–∏—Ç').toLowerCase();
        const value = row[colIndex]?.toString().toLowerCase() || '';
const isMatch = isNumericField 
  ? !isNaN(Number(value)) && Number(value) >= Number(query)
  : value.includes(query);
        const resSearch = await fetch(API_URL);
        if (!SHEET_ID || !GOOGLE_API_KEY) {
          return interaction.reply({ content: '‚ùå –ù–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–ª—é—á—ñ API –≤ .env', ephemeral: true });
        }
        const dataSearch = await resSearch.json();
        const rowsSearch = dataSearch.values?.slice(1) || [];
        const headersSearch = dataSearch.values?.[0] || [];
        let colIndex = -1;
        switch (field) {
          case '–Ω–∞–∑–≤–∞': colIndex = 6; break;
          case '—Å–µ—Ä—ñ—è': colIndex = 7; break;
          case '–∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç': colIndex = 5; break;
          case '–∫—ñ–ª—å–∫—ñ—Å—Ç—å': colIndex = 3; break;
          case '—Ü—ñ–Ω–∞': colIndex = 4; break;
        }
        if (colIndex === -1) {
          await interaction.reply({ content: '‚ùå –ù–µ–≤—ñ–¥–æ–º–µ –ø–æ–ª–µ –¥–ª—è –ø–æ—à—É–∫—É.', ephemeral: false });
          return;
        }
        const isNumericField = ['–∫—ñ–ª—å–∫—ñ—Å—Ç—å', '—Ü—ñ–Ω–∞'].includes(field);
        const results = rowsSearch.filter(row => {
          const value = row[colIndex]?.toString().toLowerCase() || '';
          return isNumericField ? Number(value) >= Number(query) : value.includes(query);
        });
        if (results.length === 0) {
          await interaction.reply({ content: 'üîç –ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.', ephemeral: false });
          return;
        }
      output = '| –ù–∞–∑–≤–∞       | –ö—ñ–ª—å–∫—ñ—Å—Ç—å | –¶—ñ–Ω–∞ |\n';
        output += '|--------------|------------|--------|\n';
        for (let i = 0; i < Math.min(10, results.length); i++) {
          const row = results[i];
          const name = row[6] || '‚Äî';
          const quantity = row[3] || '‚Äî';
          const price = row[4] || '‚Äî';
          output += `| ${name.padEnd(13).slice(0, 13)} | ${quantity} | ${price} |\n`;
        }
        const embedSearch = new EmbedBuilder()
          .setTitle(`üîç –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É (${results.length})`)
          .setDescription(`\`\`\`md
${output}\`\`\``)
          .setColor(3066993);
        if (interaction.commandName === '–ø–æ—à—É–∫') {
          const rowButtons = new ActionRowBuilder()
            .addComponents(
              new ButtonBuilder()
                .setCustomId('download_excel_search')
                .setLabel('–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ Excel')
                .setStyle(ButtonStyle.Primary)
            );
          await interaction.reply({ embeds: [embedSearch], components: [rowButtons], ephemeral: false });
        } else if (interaction.commandName === '–ø–æ—à—É–∫-–µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ') {
          const exportData = [headersSearch, ...results]; // –¥–æ–¥–∞—î–º–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏ + —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
          const worksheet = XLSX.utils.aoa_to_sheet(exportData);
          if (!headers || !Array.isArray(headers)) {
            headers = ['ID', '–î–∞—Ç–∞', '–ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç', '–ö—ñ–ª—å–∫—ñ—Å—Ç—å', '–¶—ñ–Ω–∞', '–ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç', '–ù–∞–∑–≤–∞', '–°–µ—Ä—ñ—è'];
          }
          const workbook = XLSX.utils.book_new();
          XLSX.utils.book_append_sheet(workbook, worksheet, '–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É');
          const filePath = './search_results.xlsx';
          XLSX.writeFile(workbook, filePath);
          await interaction.reply({
            content: 'üìä –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ —Ñ–∞–π–ª...',
            files: [filePath],
            ephemeral: false
          });
        }
        break;
      case '—Ä–æ–∑—É–º–Ω–∏–π-–ø–æ—à—É–∫':
        const resSmartSearch = await fetch(API_URL);
        if (!SHEET_ID || !GOOGLE_API_KEY) {
          return interaction.reply({ content: '‚ùå –ù–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–ª—é—á—ñ API –≤ .env', ephemeral: true });
        }
        const dataSmartSearch = await resSmartSearch.json();
        const rowsSmartSearch = dataSmartSearch.values?.slice(1) || [];
        const headersSmartSearch = dataSmartSearch.values?.[0] || [];
        const filters = {
          name: interaction.options.getString('–Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞'),
          client: interaction.options.getString('–∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç'),
          series: interaction.options.getString('—Å–µ—Ä—ñ—è'),
          priceMin: interaction.options.getNumber('—Ü—ñ–Ω–∞_–≤–∏—â–µ'),
          quantityMin: interaction.options.getNumber('–∫—ñ–ª—å–∫—ñ—Å—Ç—å_–≤–∏—â–µ')
        };
        const smartResults = rowsSmartSearch.filter(row => {
          const nameMatch = !filters.name || row[6]?.toLowerCase().includes(filters.name.toLowerCase());
          const clientMatch = !filters.client || row[5]?.toLowerCase().includes(filters.client.toLowerCase());
          const seriesMatch = !filters.series || row[7]?.toLowerCase().includes(filters.series.toLowerCase());
          const priceMatch = !filters.priceMin || Number(row[4] || 0) >= filters.priceMin;
          const quantityMatch = !filters.quantityMin || Number(row[3] || 0) >= filters.quantityMin;
          return nameMatch && clientMatch && seriesMatch && priceMatch && quantityMatch;
        });
        if (smartResults.length === 0) {
          await interaction.reply({ content: 'üîç –ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.', ephemeral: false });
          return;
        }
        output = '| –ù–∞–∑–≤–∞       | –ö—ñ–ª—å–∫—ñ—Å—Ç—å | –¶—ñ–Ω–∞ |\n';
        output += '|--------------|------------|--------|\n';
        for (let i = 0; i < Math.min(10, results.length); i++) {
          const row = results[i];
          const name = row[6] || '‚Äî';
          const quantity = row[3] || '‚Äî';
          const price = row[4] || '‚Äî';
          output += `| ${name.padEnd(13).slice(0, 13)} | ${quantity} | ${price} |\n`;
        }
        const embedSmartSearch = new EmbedBuilder()
          .setTitle(`üîç –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ —Ä–æ–∑—É–º–Ω–æ–≥–æ –ø–æ—à—É–∫—É (${smartResults.length})`)
          .setDescription(`\`\`\`md
${output}\`\`\``)
          .setColor(3066993);
        const rowSmartExport = new ActionRowBuilder()
          .addComponents(
            new ButtonBuilder()
              .setCustomId('download_excel_smart')
              .setLabel('–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ Excel')
              .setStyle(ButtonStyle.Success)
          );
        await interaction.reply({ embeds: [embedSmartSearch], components: [rowSmartExport], ephemeral: false });
        break;
      case '–µ–∫—Å–ø–æ—Ä—Ç':
        const resExport = await fetch(API_URL);
        if (!SHEET_ID || !GOOGLE_API_KEY) {
          return interaction.reply({ content: '‚ùå –ù–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–ª—é—á—ñ API –≤ .env', ephemeral: true });
        }
        const dataExport = await resExport.json();
        const exportRows = dataExport.values || [];
        const worksheet = XLSX.utils.aoa_to_sheet(exportRows);
        const workbook = XLSX.utils.book_new();
        XLSX.utils.book_append_sheet(workbook, worksheet, '–î–∞–Ω—ñ');
        const filePathExport = './table.xlsx';
        XLSX.writeFile(workbook, filePathExport);
        await interaction.reply({
          content: 'üìé –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –≤—Å—é —Ç–∞–±–ª–∏—Ü—é...',
          files: [filePathExport],
          ephemeral: false
        });
        break;
      case 'help':
        const helpEmbed = new EmbedBuilder()
          .setTitle('üìö –î–æ–ø–æ–º–æ–≥–∞')
          .setDescription('–û—Å—å —É—Å—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:')
          .addFields([
            { name: '/–∑–∞–ª–∏—à–∫–∏', value: '–ü–æ–∫–∞–∑—É—î –∑–∞–≥–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —ñ —Å—É–º—É —Ç–æ–≤–∞—Ä—ñ–≤', inline: false },
            { name: '/–æ–Ω–æ–≤–∏—Ç–∏', value: '–ü–æ–∫–∞–∑—É—î –æ—Å—Ç–∞–Ω–Ω—ñ 10 –∑–∞–ø–∏—Å—ñ–≤', inline: false },
            { name: '/–ø–æ—Ä–æ–∂–Ω—ñ', value: '–ü–æ–∫–∞–∑—É—î —Ç–æ–≤–∞—Ä–∏, –¥–µ –∫—ñ–ª—å–∫—ñ—Å—Ç—å ‚â§ 5', inline: false },
            { name: '/–ø–æ—à—É–∫ [–ø–æ–ª–µ] [–∑–∞–ø–∏—Ç]', value: '–ü–æ—à—É–∫ –∑–∞ –ø–æ–ª—è–º–∏: –Ω–∞–∑–≤–∞, —Å–µ—Ä—ñ—è, –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç', inline: false },
            { name: '/—Ä–æ–∑—É–º–Ω–∏–π-–ø–æ—à—É–∫', value: '–ü–æ—à—É–∫ –∑–∞ –∫—ñ–ª—å–∫–æ–º–∞ –ø–æ–ª—è–º–∏', inline: false },
            { name: '/–ø–æ—à—É–∫-–µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ [–ø–æ–ª–µ] [–∑–∞–ø–∏—Ç]', value: '–ï–∫—Å–ø–æ—Ä—Ç—É—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É –≤ Excel', inline: false },
            { name: '!–¥–æ–¥–∞—Ç–∏ [–Ω–∞–∑–≤–∞] [–∫—ñ–ª—å–∫—ñ—Å—Ç—å]', value: '–î–æ–¥–∞—î –Ω–æ–≤–∏–π –∑–∞–ø–∏—Å —á–µ—Ä–µ–∑ Google Apps Script', inline: false },
            { name: '!–µ–∫—Å–ø–æ—Ä—Ç', value: '–ï–∫—Å–ø–æ—Ä—Ç—É—î—Ç—å—Å—è –≤—Å—è —Ç–∞–±–ª–∏—Ü—è', inline: false }
          ])
          .setColor(5763719)
          .setTimestamp();
        const rowHelp = new ActionRowBuilder()
          .addComponents(
            new ButtonBuilder()
              .setLabel('–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è')
              .setURL('https://your-docs-link-here')
              .setStyle(ButtonStyle.Link)
          );
        await interaction.reply({ embeds: [helpEmbed], components: [rowHelp], ephemeral: false });
        break;
    }
  } catch (err) {
    console.error(err);
    await interaction.reply({ content: '‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –¥–∞–Ω–∏—Ö.', ephemeral: false });
  }
});

// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
// üí¨ –¢–µ–∫—Å—Ç–æ–≤—ñ –∫–æ–º–∞–Ω–¥–∏
// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
client.on('messageCreate', async msg => {
  if (msg.author.bot) return;
  const args = msg.content.split(' ');
  // !–¥–æ–¥–∞—Ç–∏ [–Ω–∞–∑–≤–∞] [–∫—ñ–ª—å–∫—ñ—Å—Ç—å]
  if (args[0] === '!–¥–æ–¥–∞—Ç–∏') {
    if (args.length < 3) {
      msg.reply('–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: `!–¥–æ–¥–∞—Ç–∏ [–Ω–∞–∑–≤–∞] [–∫—ñ–ª—å–∫—ñ—Å—Ç—å]`');
      return;
    }
    const name = args.slice(1, -1).join(' ');
    const quantity = parseInt(args[args.length - 1]);
    if (quantity <= 0) {
      msg.reply('‚ùå –ö—ñ–ª—å–∫—ñ—Å—Ç—å –º–∞—î –±—É—Ç–∏ –±—ñ–ª—å—à–µ 0.');
      return;
    } 
    if (!name || isNaN(quantity)) {
      msg.reply('‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç. –ü—Ä–∏–∫–ª–∞–¥: `!–¥–æ–¥–∞—Ç–∏ –Ω–æ—É—Ç–±—É–∫ 5`');
      return;
    }
    try {
      const response = await fetch(APP_SCRIPT_URL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ name, quantity })
      });
      const text = await response.text();
      if (text.trim() === 'OK') {
        msg.reply(`‚úÖ –î–æ–¥–∞–Ω–æ: "${name}" √ó ${quantity}`);
      } else {
        msg.reply('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –¥–æ–¥–∞—Ç–∏ –∑–∞–ø–∏—Å.');
      }
    } catch (err) {
      console.error(err);
      msg.reply('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –∑–∞–ø–∏—Ç –¥–æ Google Apps Script.');
  }
  }
  // !–µ–∫—Å–ø–æ—Ä—Ç
  if (msg.content === '!–µ–∫—Å–ø–æ—Ä—Ç') {
    try {
      const res = await fetch(API_URL);
      if (!SHEET_ID || !GOOGLE_API_KEY) {
        return interaction.reply({ content: '‚ùå –ù–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–ª—é—á—ñ API –≤ .env', ephemeral: true });
      }
      const data = await res.json();
      const exportRows = data.values || [];
      const worksheet = XLSX.utils.aoa_to_sheet(exportRows);
      const workbook = XLSX.utils.book_new();
      XLSX.utils.book_append_sheet(workbook, worksheet, '–î–∞–Ω—ñ');
      const filePath = './table.xlsx';
      XLSX.writeFile(workbook, filePath);
      await msg.reply({
        content: 'üìä –î–∞–Ω—ñ –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ:',
        files: [filePath]
      });
    } catch (err) {
      console.error(err);
      msg.reply('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ —Ñ–∞–π–ª.');
    }
  }
});

// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
// ‚öôÔ∏è –õ–æ–≥—ñ–Ω –±–æ—Ç–∞
// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
client.login(process.env.BOT_TOKEN);
>>>>>>> master
